// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `image.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package jderobot;

/**
 * Static description of the image source.
 **/
public class ImageDescription extends Ice.ObjectImpl
{
    public ImageDescription()
    {
    }

    public ImageDescription(int width, int height, int size, String format)
    {
        this.width = width;
        this.height = height;
        this.size = size;
        this.format = format;
    }

    private static class __F implements Ice.ObjectFactory
    {
        public Ice.Object create(String type)
        {
            assert(type.equals(ice_staticId()));
            return new ImageDescription();
        }

        public void destroy()
        {
        }
    }
    private static Ice.ObjectFactory _factory = new __F();

    public static Ice.ObjectFactory
    ice_factory()
    {
        return _factory;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::jderobot::ImageDescription"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeInt(width);
        __os.writeInt(height);
        __os.writeInt(size);
        __os.writeString(format);
        __os.endWriteSlice();
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        width = __is.readInt();
        height = __is.readInt();
        size = __is.readInt();
        format = __is.readString();
        __is.endReadSlice();
    }

    /**
     * < %Image width [pixels]
     **/
    public int width;

    /**
     * < %Image height [pixels]
     **/
    public int height;

    /**
     * < %Image size [bytes]
     **/
    public int size;

    /**
     * < %Image format string
     **/
    public String format;

    public static final long serialVersionUID = 4963712650806570912L;
}
